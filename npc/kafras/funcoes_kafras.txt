//  ___________________________________________________________________           
// /                                                                   \
// |            _           _   _   _                                  |
// |           | |__  _ __ / \ | |_| |__   ___ _ __   __ _             |
// |           | '_ \| '__/ _ \| __| '_ \ / _ \ '_ \ / _` |            |
// |           | |_) | | / ___ \ |_| | | |  __/ | | | (_| |            |
// |           |_.__/|_|/_/   \_\__|_| |_|\___|_| |_|\__,_|            |
// |                                                                   |
// |                        brAthena  Script                           |
// |                        www.brathena.org                           |
// |-------------------------------------------------------------------|
// |                                                                   |
// | Copyright (c) brAthena Dev Team                                   |
// | Copyright (c) Hercules Dev Team                                   |
// | Copyright (c) Athena Dev Teams                                    |
// |                                                                   |
// |-------------------------------------------------------------------|
// | Licenciado sob a licenca GNU GPL                                  |
// | Para mais informações leia o arquivo LICENSE na raíz do emulador  |
// |-------------------------------------------------------------------|
// | Anotações:                                                        |
// | - Traduzido por [Jeeffrey]                                        |
// \___________________________________________________________________/
//
//===== Hercules Script ======================================
//= Kafra Functions
//===== By: ==================================================
//= rAthena Dev Team
//= Darlskies, Darkchild, Syrus22, Lupus, kobra_k88 (2.0)
//= L0ne_W0lf
//===== Current Version: =====================================
//= 6.8
//===== Description: =========================================
//= These functions handle save, storage, cart rental, teleport,
//= and Free Teleport/Warp/Rent Cart options for all Kafra NPCs.
//=
//= Kafra's will need a lot of work. The Welcome Message argument
//= may become obsolete, as most kafras have a slightly differing
//= Welcome message.
//===== Additional Comments: =================================
//= 1.1 Now using functions v2.1 Added Cart Rent for Classes: Whitesmith, Professor.
//=     Replaced checkoption(x) into checkcart(0) [Lupus] v2.1b Added Fix Kafra Pass Func [Kobra_k88]
//= 2.2 Final fix of the Kafra Pass Exploit! [Lupus] a -Izlude[4] fix
//= 2.2a Minor changes to function calls.  Using agruments. Added Guild options. [kobra_k88]
//= 2.2b This version uses arrays for the teleport option. Rearranged next statements to make menu transitions smoother. [kobra_k88]
//= 2.3 Removed SAVE from Niflheim. [Lupus]
//= 2.3 removed "fix" by HawkMoon RTFM and check supernovice.txt . There's a SPECIAL Kafra which gives CARTS to SN for a special proce. [Lupus]
//= 2.4 Added Baby Class Support (Baby Novice check) Removed annoying storage feature where u had to close dialog window to be able to use your storage [Lupus]
//= 2.5 Added Louyang official Kafra, fixes some Kafras, not letting you to Save your position [Lupus]
//= 2.6 Reverted Dungeons Kafras (they should offer only Storage). Added temp Ayothaya Kafra
//= 2.7 Added correct Ayothaya, Louyang & Amatsu Kafras. [Lupus]
//= 2.8 Fixed Amatsu Storage problems [Lupus] 2.9 Fixed spelling mistakes. [Nexon]
//= 3.0 Added special "not working teleport menu" for Einbroch Kafras [Lupus]
//= 3.1 Removed callfunc Is_####_Class in favor of baseClass [Silentdragon]
//= 3.2 Fixed an exploit [Lupus]
//= 4.0 Added Kafra storage password protection. [Lupus]
//=     to block Kafra Password, read comments at 350 line
//= 5.0 Fixed the close2;....close; end; lines. Who let them slip away? =/ [erKURITA]
//=     Also, the kafra upon warp was giving back the zeny. Removed. [erKURITA]
//= 5.1 Optimized a little, added no tele/save arg's [Evera]
//= 5.1a Temporary? Added F_ClearGarbage to clear unused/outdated variables [Lupus]
//= 5.2 By default commented out custom Guilds Kafra's "Guild Storage". [Lupus]
//= 5.3 uncommented Guild Storage. Confirmed kRO feature. [Lupus]
//= 5.4 added -Guide option (Kafra shows you nearest Guide) Work in progress.
//=     Need all coords for all guides.. and somehow pass their coords to kafra.
//=     Removed universal Kafra Pass, added 3 new Kafra Tickets [Lupus]
//= 5.4b temporary moved "-Guide" from the 1st menu punct [Lupus]
//= 5.5 Added proper Niflheim welcome message.	[L0ne_W0lf]
//=     Cleaned up the menus a bit. Got rid of the proceeding "-" prefix.
//= 5.5b Missed a preceeding hyphen, which was screwing up teleporting. [L0ne_W0lf]
//= 5.6 Further dialog updates, added  dynamic costs for cart and storage use. [L0ne_W0lf]
//=     Updated some functions to handle Guild Kafras the way they should.
//= 5.6a Corrected a few wrong names in the teleport function. [L0ne_W0lf]
//= 5.7 Correced end message no longer displaying, and the duplicate names [L0ne_W0lf]
//=     Thanks to Barron-Monster for pointing out the issues.
//= 5.8 Fixed another double name being shown when "saving" [L0ne_W0lf]
//= 5.9 Fixed the Kafra Welcome message for guilds. Thanks Barron-Monster. [L0ne_W0lf]
//= 6.0 Closed Kafra Password exploit in Cool Event Corp. Storages until we got a client/packet based password support.
//=     Added 2 args into F_SetKafCode to fit it in Cool Evnt Co. NPC [Lupus]
//= 6.1 Added menu for Turbo Track Kafra Staff. [L0ne_W0lf]
//= 6.2 Updated/Fixed warp cords. [Kisuka]
//= 6.3 #kafra_code is now stored as is. [brianluau]
//= 6.4 Removed unofficial Guide function. [Daegaladh]
//= 6.5 Optimized. [Joseph]
//= 6.6 Added Warp Points / View Points Function. [Joseph]
//= 6.7 Added Rune Knight Kafra. [Euphy]
//= 6.8 Improved compatibility with Zonda Staff NPCs. Modernized syntax. [Haru]
//============================================================

//=== Main Function ========================================================
//=   arg(0): Used to determine which welcome message to show.
//=   arg(1): Used to determine which menu to display.
//=   arg(2): Used to determine if the info menu is shown in F_KafInfo.
//=   arg(3): Cost to use Storage
//=   arg(4): Cost to Rent a Pushcart
//==========================================================================

function	script	F_Kafra	{
	callfunc "F_ClearGarbage"; // Clear outdated, unused variables
	// Display Kafra Welcome Message
	switch (getarg(0)) {
		default:
		case 0:
			mes "[Funcionária Kafra]";
			mes "Bem vindo à Corporação Kafra. Os serviços da Corporação Kafra sempre estarão ao seu lado. Como posso lhe ajudar ?";
			break;
		// Niflheim mensagem específica
		case 1:
			mes "[Funcionária Kafra]";
			mes "^666666B-Be-Beeeemmm V-vindooo";
			mes "a c-cooorpoor-r-raaçãaaoo";
			mes "K-k-Kafraaaa...^000000";
			break;
		case 2:
			// Guild Castle Kafra message
			@GID = getcharid(2);
			mes "[Funcionária Kafra]";
			mes "Bem vindo membro da guilda ^ff0000" + getguildname(@GID) + "^000000 .";
			mes "A Corporação Kafra, está aqui para atender você.";
			break;
		case 3:
			// Amatsu mensagem específica
			mes "[Funcionária Kafra]";
			mes "Então, você vem de uma terra distante para estudar nossa cultura, ou você só está observando?";
			mes "Em ambos os casos, porque não permanecer por algum tempo?";
			mes "Com a eterna fragância";
			mes "do aroma de flores silvestres.";
			break;		
		case 4:
			// Louyang e Ayothaya mensagem específica
			mes "[Funcionária Kafra]";
			mes "Com tantas Kafras";
			mes "espalhadas, você nunca";
			mes "estará longe de casa.";
			break;		
		case 5:
			// NPC has it's own welcome message. (Display nothing)
			break;
	}
	next;
	while (true) {
		deletearray @K_Menu0$;
		if (getarg(0) == 2) {
			// Guild Kafra Menu override (free Teleport, free Storage, Free Cart)
			setarray @K_Menu0$[0],"Usar Armazém","Usar Armazém da Guilda","Alugar Carrinho","Usar Serviço de Teleporte","Cancelar";
		} else {
			switch(getarg(1)){
				// Opção de Salvar e Usar Armazém.
				case 1:	setarray @K_Menu0$[0],"Salvar","Usar Armazém","Cancelar"; break;
				// Usar Armazém.
				case 2:	setarray @K_Menu0$[0],"Usar Armazém","Cancelar"; break;
				// Opção de Salvar, Usar Armazém, Alugar Carrinho.
				case 3: setarray @K_Menu0$[0],"Salvar","Usar Armazém","Alugar Carrinho","Checar outra informação","Cancelar"; break;
				// Usar Armazém, Alugar Carrinho, Checar outra informação.
				case 5:	setarray @K_Menu0$[0],"Usar Armazém","Alugar Carrinho","Checar outra informação","Cancelar"; break;
				// Usar Armazém e Checar outra informação.
				case 6:	setarray @K_Menu0$[0],"Usar Armazém","Checar outra informação","Cancelar";	break;
				// Opção de Salvar, Usar Armazém, Alugar Carrinho
				case 7:	setarray @K_Menu0$[0],"Salvar","Usar Armazém","Alugar Carrinho","Cancelar"; break;
				// Opção de Salvar, Usar Armazém, Checar outra informação
				case 8: setarray @K_Menu0$[0],"Salvar","Usar Armazém","Checar outra informação","Cancelar"; break;
				// No Save (Rune Knight)
				case 9: setarray @K_Menu0$[0],"Usar Armazém","Alugar Carrinho","Usar Serviço de Teleporte","Checar outra informação","Cancelar"; break;
				// Usar Armazém, Usar Armazém, e Alugar Carrinho.
				case 10: setarray @K_Menu0$[0],"Usar Armazém","Salvar","Alugar Carrinho","Cancelar"; break;
				// Mensagem Padrão.
				default: setarray @K_Menu0$[0],"Salvar","Usar Armazém","Usar Serviço de Teleporte","Alugar Carrinho","Checar outra informação","Cancelar"; break;
			}
		}
		.@menu$ = "";
		for (.@i = 0; .@i < getarraysize(@K_Menu0$); ++.@i)
			.@menu$ += @K_Menu0$[.@i] + ":";
		.@j = select(.@menu$) - 1;
		if (@K_Menu0$[.@j] == "Salvar") {
			return;
		} else if (@K_Menu0$[.@j] == "Usar Armazém") {
			if(getarg(0) == 2)
				callfunc "F_KafStor",2,0,0,"[Funcionária Kafra]";
			else
				callfunc "F_KafStor",0,getarg(3),getarg(0),"[Funcionária Kafra]";
			next;
		} else if (@K_Menu0$[.@j] == "Usar Serviço de Teleporte") {
			// Display Einbroch "No Teleport Service" notice.
			if (getarg(1) != 4) {
				callfunc "F_KafTele",getarg(0),"[Funcionária Kafra]";
			} else {
				mes "[Funcionária Kafra]";
				mes "Por causa do ^FF0000Acordo de limite";
				mes "de transporte^000000, a";
				mes "Corporação Kafra não pode";
				mes "fornecer serviços de teletransporte";
				mes "aqui na república de Schwartzwald.";
				next;
				mes "[Funcionária Kafra]";
				mes "Nós solicitamos a você utilizar";
				mes "o serviço de Aeroplano no lugar";
				mes "do teletransporte. Muito obrigado por sua";
				mes "compreensão e cooperação.";
			}
			next;
		} else if (@K_Menu0$[.@j] == "Alugar Carrinho") {
			if(callfunc("F_KafCart",getarg(0),getarg(4),"[Funcionária Kafra]") == 1)
				next;
		} else if (@K_Menu0$[.@j] == "Checar outra informação") {
			callfunc "F_KafInfo",getarg(2);
			next;
		} else if (@K_Menu0$[.@j] == "Cancelar"){
			callfunc "F_KafEnd",getarg(0),0;
			end;
		} else if (@K_Menu0$[.@j] == "Usar Armazém da Guilda") {
			callfunc "F_KafStor",1,0,0,"[Funcionária Kafra]";
			next;
		}
	}
}

//===================================================
// Storage Function
//=   arg(0): Specifies the type of storage that has been requested:
//            0 = Regular storage
//            1 = Guild storage
//            2 = Regular storage, in a castle (free of charge)
//=   arg(1): Cost to Usar Armazém.
//=   arg(2): The type of NPC this is being called from. Notable values:
//            0,2-5 = Regular Kafra
//            1 = Niflheim Kafra (special messages)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(3): NPC title to display.
//===================================================
function	script	F_KafStor	{
	// Desabilitado para acesso ao Armazém da Guilda (Ocupado).
	if (getarg(0) == 1) {
		if (guildopenstorage()) {
			mes "[Funcionária Kafra]";
			mes "Sinto muito, mas outro membro do Clã está usando o armazém neste instante.";
			mes "Por favor, aguarde até que esta pessoa termine.";
			close2;
			cutin "", 255;
			end;
		}
		cutin "", 255;
		close;
	}
	// Desabilitado para acesso ao Armazém Normal (Nível de Habilidades Básicas Insuficiente).
	if (basicskillcheck() && getskilllv(NV_BASIC) < 6) {
		mes getarg(3);
		// Niflheim mensagem específica.
		if (getarg(2) == 1) {
			mes "^666666S-D-ddeessssculllpppe,";
			mes "v-vo-voooccêe éee umm";
			mes "Appreenddizz... P-Prreeecisa teerrr";
			mes "nívveelll d-de hh-habibilidaddeee level 6...^000000";
			return;
		}
		mes "Lamento, mas você";
		mes "precisa ser um Aprendiz com ";
		mes "nível mínimo de habilidade";
		mes "level 6 para usar o armazém.";
		return;
	}
	// Armazém Normal.
	if (getarg(0) != 2) {
		if (countitem(Cargo_Free_Ticket)) {
			delitem Cargo_Free_Ticket, 1;
		} else {
			if (Zeny < getarg(1)) {
				mes getarg(3);
				// Niflheim Mensagem Específica.
				if (getarg(2) == 1) {
					percentheal -50,-50;
					mes "^666666Zeeeeeny...";
					mes "P-Preeciso de Z-Zeny...!";
					mes "P-Preciiiso de 150... Zenys...";
					mes "Ergh!!! T-tomando e-energia!";
					return;
				}
				// Mensagem Padrão.
				mes "Lamento, mas você não possui";
				mes "Zenys suficientes para usar";
				mes "o serviço de armazém.";
				mes "Para acessar o armazém o custo é: "+getarg(1)+" Zenys.";
				return;
			}
			Zeny -= getarg(1);
			if (getarg(2) != 6)
				RESRVPTS += getarg(1) / 5;
		}
	}

	// Surpress the "End" message if in guild castle.
	if (getarg(0) != 2) {
		// Niflheim Mensagem Específica.
		if (getarg(2) == 1) {
			percentheal 0,-10;
			mes getarg(3);
			for (.@i = 0; .@i < 5; ++.@i)
				mes "^666666Thank you.. for... using...^000000";
		} else if (getarg(2) == 6) {
			// Zonda
			mes getarg(3);
			mes "Aqui, deixe-me abrir";
			mes "seu Armazém para você.";
			mes "Obrigado por usar";
			mes "o Serviço Kafra.";
		} else {
			// Normal message
			mes getarg(3);
			mes "Aqui, deixe-me abrir";
			mes "seu Armazém para você.";
			mes "Obrigado por usar";
			mes "o Serviço Kafra.";
		}
	}
	callfunc("F_CheckKafCode");
	close2;
	openstorage;
	cutin "", 255;
	end;
}

//===================================================
// Teleport Function
//=   arg(2): The type of NPC this is being called from. Notable values:
//            2 = Guild Castle Kafra (don't consume tickets)
//            6 = Zonda/Cool Event Staff (no RESRVPTS)
//=   arg(1): NPC title to display.
//===================================================
function	script	F_KafTele	{
	mes getarg(1);
	mes "Por favor, escolha seu destino.";
	next;
	.@menu$ = "";
	for (.@i = 0; .@i <= getarraysize(@wrpD$); ++.@i)
		.@menu$ += @wrpC$[.@i] + ":";
	.@j = select(.@menu$) - 1;
	if (@wrpC$[.@j] == "Cancelar")
		return;
	if (countitem(Warp_Free_Ticket) > 0 && getarg(0) != 2) {
		delitem Warp_Free_Ticket, 1;
	} else {
		if (Zeny < @wrpP[.@j]) {
			mes getarg(1);
			mes "Sinto muito, mas você não possui";
			mes "Zenys para teleportar.";
			mes "O serviço de teleporte ";
			mes "para "+@wrpD$[.@j]+" is "+@wrpP[.@j]+" Zenys.";
			close2;
			cutin "", 255;
			end;
		}
		Zeny -= @wrpP[.@j];
		if (getarg(0) != 6)
			RESRVPTS += @wrpP[.@j] / 16;
	}
	cutin "", 255;
	if (@wrpD$[.@j] == "Al De Baran") warp "aldebaran",168,112;
	else if (@wrpD$[.@j] == "Alberta") warp "alberta", 117, 56;
	else if (@wrpD$[.@j] == "Comodo") warp "comodo", 209, 143;
	else if (@wrpD$[.@j] == "Comodo Ilha do Farol") warp "cmd_fild07", 127, 134;
	else if (@wrpD$[.@j] == "Geffen") warp "geffen", 120, 39;
	else if (@wrpD$[.@j] == "Izlude") { if (RENEWAL) warp "izlude", 128, 98; else warp "izlude", 91, 105; }
	else if (@wrpD$[.@j] == "Juno") warp "yuno", 158, 125;
	else if (@wrpD$[.@j] == "Mina Abandonada de Mjolnir") warp "mjolnir_02", 99, 351;
	else if (@wrpD$[.@j] == "Morroc") warp "morocc", 156, 46;
	else if (@wrpD$[.@j] == "Caverna dos Orcs") warp "gef_fild10", 52, 326;
	else if (@wrpD$[.@j] == "Payon") warp "payon", 161, 58;
	else if (@wrpD$[.@j] == "Prontera") warp "prontera", 116, 72;
	else if (@wrpD$[.@j] == "Umbala") warp "umbala", 100, 154;
	else if (@wrpD$[.@j] == "Veins") warp "veins",205,101;
	else if (@wrpD$[.@j] == "Rachel") warp "rachel",115,125;
	end;
}


//===================================================
// Carrinho
//===================================================
function	script	F_KafCart	{
	// Ensure that the class wanting to rent a pushcart is a merchant
	if (BaseClass != Job_Merchant) {
		mes getarg(2);
		mes "Eu lamento, mas o serviço de aluguel de carrinho está disponível somente para Mercadores, Ferreiros, Mestre Ferreiros, Alquimistas e Criadores.";
		return 1;
	}
	if (getskilllv(MC_PUSHCART) == 0) {
		mes getarg(2);
		mes "Você já possui um carrinho equipado.";
		mes "Infelizmente, nós não podemos alugar mais de um carrinho por vez.";
		return 1;
	}
	// Make sure the invoking character does not have a cart already
	if (checkcart() == 1) {
		mes getarg(2);
		mes "Você já possui";
		mes "o Carrinho equipado.";
		return 1;
	}
	if (countitem(Cart_Free_Ticket) > 0 && getarg(0) != 2) {
		delitem Cart_Free_Ticket, 1;
	} else {
		mes getarg(2);
		mes "O aluguel do carrinho de mão";
		mes "custará "+getarg(1)+" Zenys.";
		mes "Você deseja alugar um carrinho de mão?";;
		next;
		if (select("Alugar Carrinho.:Cancel") == 2)
			return 0;
		if (Zeny < getarg(1)) {
			mes getarg(2);
			mes "Lamento, mas você não possui Zenys suficientes para alugar um carrinho.";
			mes "o aluguel custa "+getarg(1)+" Zenys.";
			return 1;
		}
		Zeny -= getarg(1);
		if (getarg(0) != 6)
			RESRVPTS += 48;
	}
	setcart;
	return 1;
}

//===================================================
// Special Reserve Points Function
//===================================================
function	script	F_KafInfo	{
	// Uncomment next line to block Kafra Storage Protection
	//.@block = 1;
	setarray .@m$, "Checar reserva de pontos especiais.","Senha do Armazém","Localização das Funcionárias","Cancelar";
	if (getarg(0) == 2) deletearray .@m$[1],2; // Cavaleiro Rúnico
	else if (.@block) deletearray .@m$[1],1; // Remove Storage Password
	while (true) {
		.@j = select(implode(.@m$,":")) - 1;
		if (.@m$[.@j] == "Checar reserva de pontos especiais.") {
			mes "[Funcionária Kafra]";
			mes "Vamos ver...";
			mes strcharinfo(0) + "...";
			mes "Ah, você tem um total de ";
			mes RESRVPTS+ " reservas de pontos especiais.";
			next;
			mes "[Funcionária Kafra]";
			mes "Você pode trocar suas";
			mes "Reservas de pontos especiais por";
			mes "recompensas no escritório da Corporação Kafra em Aldebaran. Por favor,";
			mes "utilize nossos serviços convenientes receber os benefícios do nosso programa de recompensas.";
			next;
			if(getarg(0) == 1)
				return;
		} else if (.@m$[.@j] == "Localização das Funcionárias") {
			for (.@i = 0; .@i <= 3; ++.@i)
				viewpoint 1,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			next;
			for (.@i = 0; .@i <= 3; ++.@i)
				viewpoint 2,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
		} else if (.@m$[.@j] == "Senha do Armazém") {
			callfunc("F_SetKafCode","[Funcionária Kafra]","Serviços Kafra");
		} else {
			return;
		}
	}
}

// === End Function ==================================================
//  arg(0): used to determine what message to display.
//  arg(1): used to determine if save message is displayed.
//  arg(2): used to display the name of the area you're saving in.
//===================================================================
function	script	F_KafEnd	{
	mes "[Funcionária Kafra]";
	if (getarg(1) == 1) {
		mes "Seu ponto de renascimento";
		mes "foi salvo aqui.";
		mes getarg(2)+".";
		mes "Muito obrigado por usar";
		mes "os serviços da Corporação Kafra.";
	} else if (getarg(0) == 0 || getarg(0) == 5) {
		mes "Nós da Corporação Kafra,";
		mes "sempre estamos nos esforçando para proporcionoar os melhores serviços. Esperamos satisfazer as suas necessidades de aventureiro nos seus padrões de excelência.";
	} else if (getarg(0) == 1) {
		percentheal 0,-25;
		mes "^666666Kaffffra n-nunca";
		mes "mooooorrrrre. Semprre...";
		mes "Es-ta  ao seeeuuu laaadooo~^000000";
	}
	close2;
	cutin "", 255;
	end;
}

//===================================================
// Função de Verificar o Armazém
//===================================================
function	script	F_CheckKafCode	{
	if (!#kafra_code)
		return;
	mes "Digite a senha do armazém:";
	@code_ = 0;
	input @code_;
	if (@code_ != #kafra_code) {
		dispbottom "Senha errada.";
		close2;
		cutin "",255;
		end;
	}
	@kafcode_try = 0;
	@code_ = 0;
	return;
}

// === Set / Mudar / Limpar Senha do Armazém ===
// getarg(0): Nome do NPC
// getarg(1): Nome da Compania
//=======================================================
function	script	F_SetKafCode	{
	mes getarg(0);
	if (#kafra_code) {
		mes "Seu armazém está protegido com uma senha. O que você fará agora?";
		next;
		switch (select("Mudar senha antiga -> 5000z:Remover senha do Armazém -> 1000z:Cancelar")) {
			case 1:
				mes getarg(0);
				mes "Primeiro, digite sua ^0000FFsenha antiga^000000.";
				@code = callfunc("F_EntKafCode");
				if (!@code || @code != #kafra_code) {
					mes "Senha errada. Você não pode inserir uma nova senha.";
					emotion e_hmm;
					break;
				}
				next;
				callsub S_SET,getarg(0),getarg(1);
				break;
			case 2:
				mes getarg(0);
				mes "Por favor, entre com a senha antes de sua retirada.";
				@code = callfunc("F_EntKafCode");
				if (!@code) {
					mes "A senha não foi removida.";
					emotion e_hmm;
					break;
				}
				next;
				mes getarg(0);
				if (Zeny < 1000) {
					mes "Você não possui Zenys.";
					emotion e_cash;
					break;
				}
				Zeny -= 1000;
				if (@code == #kafra_code) {
					#kafra_code = 0;
					mes "Você teve êxito ao colocar senha em seu armazém.";
					mes "Muito obrigado por usar os "+getarg(1)+".";
					emotion e_thx;
				} else {
					mes "Senha errada! Não devolverei seus 1000 Zenys.";
					mes "Por favor, na próxima entre com a senha correta.";
					emotion e_sry;
				}
				break;
			case 3:
				break;
		}
	} else {
		mes getarg(1)+" orgulhosamente apresenta um novo serviço:";
		mes "Proteção adicional do seu armazém com senha.";
		next;
		switch (select("Definir nova senha -> 5000z:Cancelar")) {
			case 1: callsub S_SET,getarg(0),getarg(1); break;
			case 2: break;
		}
	}
	close2;
	cutin "",255;
	end;

S_SET:
	mes getarg(0);
	mes "Agora entre com sua ^FF0000nova senha^000000 para proteger seu armazém de roubos.";
	@code = callfunc("F_EntKafCode");
	if (!@code) {
		mes "A senha não foi trocada.";
		emotion e_hmm;
		return;
	}
	next;
	mes getarg(0);
	if (Zeny < 5000) {
		mes "Você não possui Zeny suficiente.";
		emotion e_cash;
		return;
	}
	Zeny -= 5000;
	#kafra_code = @code;
	mes "Seu armazém está protegido com uma senha secreta.";
	mes "Obrigado por usar"+getarg(1)+".";
	emotion e_thx;
	return;
}

//===================================================
// Função Básica de Validação - Senha Função
//===================================================
function	script	F_EntKafCode	{
	mes "Digite um número entre 1000~10000000:";
	@code_ = 0;
	++@kafcode_try;
	if (@kafcode_try > 10) {
		@kafcode_try = 0;
		logmes "Hack: Tentou colocar senha de armazenamento.";
	}
	if (input(@code_) == 1) {
		mes "Você não pode usar uma senha tão grande.";
		return 0;
	}
	if (@code_ < 1000) {
		mes "Você não pode usar uma senha tão curta.";
		return 0;
	}
	return @code_;
}

//===================================================
// Warp Points / View Points Function
//===================================================
function	script	F_KafSet	{
	deletearray @wrpC$;
	deletearray @wrpD$;
	deletearray @wrpP$;
	deletearray @viewpX;
	deletearray @viewpY;
	if (strnpcinfo(4) == "prontera") {
		setarray @wrpD$, "Izlude", "Geffen", "Payon", "Morroc", "Caverna dos Orcs", "Alberta";
		setarray @wrpP, 600, 1200, 1200, 1200, 1200, 1800;
		setarray @viewpX, 151, 29, 282, 152;
		setarray @viewpY, 29, 207, 200, 326;
	} else if (strnpcinfo(4) == "alberta") {
		setarray @wrpP, 1200, 1800, 1800;
		setarray @wrpD$, "Payon", "Morroc", "Prontera";
		setarray @viewpX, 28, 113, 0, 0;
		setarray @viewpY, 229, 60, 0, 0;
	} else if (strnpcinfo(4) == "aldebaran") {
		setarray @wrpP, 1200, 1200, 1800, 1700;
		setarray @wrpD$, "Geffen", "Juno" , "Izlude", "Mina Abandonada de Mjolnir";
	} else if (strnpcinfo(4) == "comodo" ) {
		setarray @wrpD$, "Morroc", "Comodo Ilha do Farol", "Umbala";
		setarray @wrpP, 1800, 1200, 1800;
	} else if (strnpcinfo(4) == "cmd_fild07") {
		setarray @wrpD$, "Comodo", "Morroc";
		setarray @wrpP, 1200, 1200;
	} else if (strnpcinfo(4) == "geffen") {
		setarray @wrpD$, "Prontera", "Al De Baran", "Caverna dos Orcs", "Mina Abandonada de Mjolnir";
		setarray @wrpP, 1200, 1200, 1200, 1700;
		setarray @viewpX, 120, 203;
		setarray @viewpY, 62, 123;
	} else if (strnpcinfo(4) == "izlude") {
		setarray @wrpD$, "Geffen", "Payon", "Morroc", "Al De Baran";
		setarray @wrpP, 1200, 1200, 1200, 1800;
	} else if (strnpcinfo(4) == "morocc") {
		setarray @wrpD$, "Prontera", "Payon", "Alberta", "Comodo", "Comodo Ilha do Farol";
		setarray @wrpP, 1200, 1200, 1800, 1800, 1200;
		setarray @viewpX, 156, 163, 28, 292;
		setarray @viewpY, 97, 260, 167, 211;
	} else if (strnpcinfo(4) == "umbala") {
		setarray @wrpD$, "Comodo";
		setarray @wrpP, 1800;
	} else if (strnpcinfo(4) == "payon") {
		setarray @wrpD$, "Prontera", "Alberta", "Morroc";
		setarray @wrpP, 1200, 1200, 1200;
	} else if (strnpcinfo(4) == "yuno") {
		setarray @wrpD$, "Al De Baran";
		setarray @wrpP, 1200;
		setarray @viewpX, 328, 278, 153, 0;
		setarray @viewpY, 108, 221, 187, 0;
	} else if (strnpcinfo(4) == "job3_rune01") {
		setarray @wrpD$, "Izlude", "Geffen", "Payon", "Morroc", "Alberta";
		setarray @wrpP, 600, 1200, 1200, 1200, 1800;
	} else if (strnpcinfo(4) == "rachel") {
		setarray @wrpD$, "Veins";
		setarray @wrpP, 2200;
	} else if (strnpcinfo(4) == "veins") {
		setarray @wrpD$, "Rachel";
		setarray @wrpP, 2200;
	}
	for (.@i = 0; .@i < getarraysize(@wrpD$); ++.@i)
		@wrpC$[.@i] = @wrpD$[.@i]+" -> "+@wrpP[.@i];
	@wrpC$[getarraysize(@wrpC$)] = "Cancelar";
	return;
}
